// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Edgerunner Trading System

//@version=6
indicator("Edgerunner Percent Above MA [Timeframe Adaptive]", shorttitle="ER-PAM", overlay=false)

// Timeframe Adaptation Settings
timeframeMultiplier = input.float(1.0, "Timeframe Multiplier", minval=0.1, maxval=10, step=0.1, tooltip="Adjust for different timeframes: 0.2 for 1H (daily/6), 1.0 for Daily, 5 for Weekly")

// Mode Selection
mode = input.string("Price vs MA", "Indicator Mode", options=["Price vs MA", "Dual MA Cross", "PPO Style"])

// Base periods
baseFastPeriod = 1  // Price for default mode
baseSlowPeriod = 200  // 200-day MA for default mode

// Adjusted periods based on timeframe
fastPeriod = mode == "Price vs MA" ? 1 : math.round(12 * timeframeMultiplier)
slowPeriod = math.round(baseSlowPeriod * timeframeMultiplier)

// Input settings
customFast = input.int(1, "Fast Period", minval=1, group="Moving Average Settings")
customSlow = input.int(200, "Slow Period", minval=2, group="Moving Average Settings")
signalPeriod = input.int(9, "Signal Line Period", minval=1, group="Moving Average Settings")

// Use custom periods if different from defaults
fastMA = customFast != 1 or mode != "Price vs MA" ? customFast : fastPeriod
slowMA = customSlow != 200 ? customSlow : slowPeriod

// Threshold Settings
upperRef = input.float(5.0, "Upper Reference (%)", step=0.5, tooltip="Bullish signal threshold for trend following")
lowerRef = input.float(-5.0, "Lower Reference (%)", step=0.5, tooltip="Bearish signal threshold for trend following")

// Calculate Moving Averages
fast = fastMA == 1 ? close : ta.sma(close, fastMA)
slow = ta.sma(close, slowMA)

// Calculate Percent Above MA
percentAboveMA = (fast - slow) / slow * 100

// Calculate Signal Line
signal = ta.sma(percentAboveMA, signalPeriod)

// Determine trend
trend = percentAboveMA > upperRef ? 1 : 
        percentAboveMA < lowerRef ? -1 : 
        percentAboveMA > 0 ? 0.5 : 
        percentAboveMA < 0 ? -0.5 : 0

// Colors
mainColor = trend == 1 ? color.green : 
            trend == -1 ? color.red : 
            trend == 0.5 ? color.new(color.green, 50) : 
            trend == -0.5 ? color.new(color.red, 50) : color.gray

// Plot main indicator
plot(percentAboveMA, title="Percent Above MA", color=mainColor, linewidth=2)
plot(signal, title="Signal Line", color=color.orange, linewidth=1)

// Plot histogram
histogram = percentAboveMA - signal
histColor = histogram > 0 ? color.new(color.green, 70) : color.new(color.red, 70)
plot(histogram, title="Histogram", style=plot.style_histogram, color=histColor)

// Reference lines
h1 = hline(upperRef, "Upper Reference", color=color.new(color.green, 50), linestyle=hline.style_dotted)
h2 = hline(lowerRef, "Lower Reference", color=color.new(color.red, 50), linestyle=hline.style_dotted)
hline(0, "Zero Line", color=color.gray, linestyle=hline.style_solid)

// Fill between references
fill(h1, h2, color=color.new(color.gray, 95), title="Neutral Zone")

// Additional reference lines for extreme values
hline(10, "Extreme High", color=color.new(color.green, 70), linestyle=hline.style_dotted)
hline(-10, "Extreme Low", color=color.new(color.red, 70), linestyle=hline.style_dotted)

// Background coloring
bgcolor(trend == 1 ? color.new(color.green, 95) : na, title="Strong Bullish Background")
bgcolor(trend == -1 ? color.new(color.red, 95) : na, title="Strong Bearish Background")

// Divergence Detection
lookback = input.int(20, "Divergence Lookback", minval=5, maxval=50, group="Divergence")
showDivergence = input.bool(false, "Show Divergences", group="Divergence")

// Bullish divergence
priceLow = ta.lowest(low, lookback)
indLow = ta.lowest(percentAboveMA, lookback)
bullishDiv = showDivergence and (low == priceLow and low < low[lookback]) and 
    (percentAboveMA == indLow and percentAboveMA > percentAboveMA[lookback])

// Bearish divergence
priceHigh = ta.highest(high, lookback)
indHigh = ta.highest(percentAboveMA, lookback)
bearishDiv = showDivergence and (high == priceHigh and high > high[lookback]) and 
    (percentAboveMA == indHigh and percentAboveMA < percentAboveMA[lookback])

plotshape(bullishDiv, title="Bullish Divergence", style=shape.triangleup, 
    location=location.bottom, color=color.green, size=size.small)
plotshape(bearishDiv, title="Bearish Divergence", style=shape.triangledown, 
    location=location.top, color=color.red, size=size.small)

// Information table
var table infoTable = table.new(position.top_right, 2, 6, bgcolor=color.new(color.black, 90))
if barstate.islast
    table.cell(infoTable, 0, 0, "Mode:", text_color=color.white)
    table.cell(infoTable, 1, 0, mode, text_color=color.yellow)
    table.cell(infoTable, 0, 1, "Fast MA:", text_color=color.white)
    table.cell(infoTable, 1, 1, str.tostring(fastMA), text_color=color.white)
    table.cell(infoTable, 0, 2, "Slow MA:", text_color=color.white)
    table.cell(infoTable, 1, 2, str.tostring(slowMA), text_color=color.white)
    table.cell(infoTable, 0, 3, "% Above:", text_color=color.white)
    table.cell(infoTable, 1, 3, str.tostring(percentAboveMA, "#.##") + "%", text_color=mainColor)
    table.cell(infoTable, 0, 4, "Signal:", text_color=color.white)
    table.cell(infoTable, 1, 4, str.tostring(signal, "#.##") + "%", text_color=color.orange)
    table.cell(infoTable, 0, 5, "Status:", text_color=color.white)
    
    statusText = trend == 1 ? "STRONG UP" : 
                 trend == -1 ? "STRONG DOWN" : 
                 trend == 0.5 ? "ABOVE MA" : 
                 trend == -0.5 ? "BELOW MA" : "NEUTRAL"
    table.cell(infoTable, 1, 5, statusText, text_color=mainColor)

// Alerts
alertcondition(ta.crossover(percentAboveMA, upperRef), 
    title="Bullish Signal", message="Percent Above MA crossed above upper reference")
alertcondition(ta.crossunder(percentAboveMA, lowerRef), 
    title="Bearish Signal", message="Percent Above MA crossed below lower reference")
alertcondition(ta.crossover(percentAboveMA, 0), 
    title="Cross Above Zero", message="Price crossed above moving average")
alertcondition(ta.crossunder(percentAboveMA, 0), 
    title="Cross Below Zero", message="Price crossed below moving average")
alertcondition(ta.crossover(percentAboveMA, signal), 
    title="Bullish Cross", message="Percent Above MA crossed above signal line")
alertcondition(ta.crossunder(percentAboveMA, signal), 
    title="Bearish Cross", message="Percent Above MA crossed below signal line")
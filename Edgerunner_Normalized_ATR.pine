// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Edgerunner Trading System

//@version=6
indicator("Edgerunner Normalized ATR [Timeframe Adaptive]", shorttitle="ER-NATR", overlay=false)

// Timeframe Adaptation Settings
timeframeMultiplier = input.float(1.0, "Timeframe Multiplier", minval=0.1, maxval=10, step=0.1, tooltip="Adjust for different timeframes: 0.2 for 1H (daily/6), 1.0 for Daily, 5 for Weekly")

// Base periods (optimized for daily)
baseATRPeriod = 20
baseSMAPeriod = 20

// Adjusted periods based on timeframe
atrPeriod = math.round(baseATRPeriod * timeframeMultiplier)
smaPeriod = math.round(baseSMAPeriod * timeframeMultiplier)

// Settings
customATR = input.int(20, "ATR Period", minval=1, maxval=50)
customSMA = input.int(20, "SMA Period", minval=1, maxval=50)
smoothing = input.int(1, "Smoothing Period", minval=1, maxval=10, tooltip="Additional smoothing for the normalized ATR")
referenceLevel = input.float(2.0, "Reference Level (%)", minval=0.5, maxval=5, step=0.1, tooltip="Threshold for high/low volatility")

// Use custom periods if different from defaults
atr = ta.atr(customATR != 20 ? customATR : atrPeriod)
sma = ta.sma(close, customSMA != 20 ? customSMA : smaPeriod)

// Calculate Normalized ATR (ATR as percentage of price)
normalizedATR = (atr / sma) * 100

// Apply smoothing
smoothedNATR = ta.sma(normalizedATR, smoothing)

// Determine volatility state
volatilityState = smoothedNATR > referenceLevel ? 1 : -1  // 1 = high volatility, -1 = low volatility

// Colors (inverse relationship with price trends)
// High volatility (red) often associated with declines
// Low volatility (green) often associated with advances
natrColor = volatilityState == 1 ? color.red : color.green

// Plot Normalized ATR
plot(smoothedNATR, title="Normalized ATR", color=natrColor, linewidth=2)

// Reference line
hline(referenceLevel, "Reference Level", color=color.gray, linestyle=hline.style_solid)

// Additional reference lines based on different asset classes
hline(1, "Low Volatility", color=color.new(color.green, 70), linestyle=hline.style_dotted)
hline(3, "Moderate Volatility", color=color.new(color.orange, 70), linestyle=hline.style_dotted)
hline(4, "High Volatility", color=color.new(color.red, 70), linestyle=hline.style_dotted)
hline(5, "Extreme Volatility", color=color.new(color.red, 50), linestyle=hline.style_dotted)

// Background coloring
bgcolor(volatilityState == 1 ? color.new(color.red, 95) : na, title="High Volatility Background")
bgcolor(volatilityState == -1 ? color.new(color.green, 95) : na, title="Low Volatility Background")

// Moving average of Normalized ATR for trend detection
maLength = input.int(10, "MA Length for Trend", minval=5, maxval=50, group="Volatility Trend")
natrMA = ta.sma(smoothedNATR, maLength)
plot(natrMA, title="NATR MA", color=color.blue, linewidth=1)

// Volatility trend detection
volRising = smoothedNATR > natrMA and ta.rising(smoothedNATR, 3)
volFalling = smoothedNATR < natrMA and ta.falling(smoothedNATR, 3)

// Plot volatility trend signals
plotshape(ta.crossover(smoothedNATR, natrMA), title="Volatility Rising Cross", 
    style=shape.triangleup, location=location.bottom, color=color.red, size=size.tiny)
plotshape(ta.crossunder(smoothedNATR, natrMA), title="Volatility Falling Cross", 
    style=shape.triangledown, location=location.top, color=color.green, size=size.tiny)

// Histogram visualization
histogram = smoothedNATR - referenceLevel
histColor = histogram > 0 ? color.new(color.red, 80) : color.new(color.green, 80)
plot(histogram, title="NATR Histogram", style=plot.style_histogram, color=histColor, linewidth=1)

// Calculate percentile rank for context
lookback = input.int(252, "Percentile Lookback", minval=50, maxval=500, group="Statistics")
percentileRank = ta.percentrank(smoothedNATR, lookback)

// Z-Score calculation
avgNATR = ta.sma(smoothedNATR, lookback)
stdNATR = ta.stdev(smoothedNATR, lookback)
zScore = stdNATR != 0 ? (smoothedNATR - avgNATR) / stdNATR : 0

// Information table
var table infoTable = table.new(position.top_right, 2, 8, bgcolor=color.new(color.black, 90))
if barstate.islast
    table.cell(infoTable, 0, 0, "ATR Period:", text_color=color.white)
    table.cell(infoTable, 1, 0, str.tostring(customATR != 20 ? customATR : atrPeriod), text_color=color.white)
    table.cell(infoTable, 0, 1, "NATR:", text_color=color.white)
    table.cell(infoTable, 1, 1, str.tostring(smoothedNATR, "#.##") + "%", text_color=natrColor)
    table.cell(infoTable, 0, 2, "ATR:", text_color=color.white)
    table.cell(infoTable, 1, 2, str.tostring(atr, "#.##"), text_color=color.gray)
    table.cell(infoTable, 0, 3, "Volatility:", text_color=color.white)
    
    volText = smoothedNATR > 4 ? "EXTREME" :
              smoothedNATR > 3 ? "HIGH" :
              smoothedNATR > 2 ? "MODERATE" :
              smoothedNATR > 1 ? "LOW" : "VERY LOW"
    volColor = smoothedNATR > 4 ? color.red :
               smoothedNATR > 3 ? color.new(color.red, 30) :
               smoothedNATR > 2 ? color.orange :
               smoothedNATR > 1 ? color.new(color.green, 30) : color.green
    table.cell(infoTable, 1, 3, volText, text_color=volColor)
    
    table.cell(infoTable, 0, 4, "Trend:", text_color=color.white)
    trendText = volRising ? "RISING" : volFalling ? "FALLING" : "STABLE"
    trendColor = volRising ? color.red : volFalling ? color.green : color.gray
    table.cell(infoTable, 1, 4, trendText, text_color=trendColor)
    
    table.cell(infoTable, 0, 5, "Percentile:", text_color=color.white)
    table.cell(infoTable, 1, 5, str.tostring(percentileRank, "#") + "%", text_color=color.white)
    
    table.cell(infoTable, 0, 6, "Z-Score:", text_color=color.white)
    zColor = zScore > 2 ? color.red : zScore < -2 ? color.green : color.gray
    table.cell(infoTable, 1, 6, str.tostring(zScore, "#.##"), text_color=zColor)
    
    table.cell(infoTable, 0, 7, "1Y Avg:", text_color=color.white)
    table.cell(infoTable, 1, 7, str.tostring(avgNATR, "#.##") + "%", text_color=color.white)

// Alerts
alertcondition(ta.crossover(smoothedNATR, referenceLevel), 
    title="Volatility Rising", message="Normalized ATR crossed above reference level - Volatility increasing")
alertcondition(ta.crossunder(smoothedNATR, referenceLevel), 
    title="Volatility Falling", message="Normalized ATR crossed below reference level - Volatility decreasing")
alertcondition(smoothedNATR > 4, 
    title="High Volatility", message="Normalized ATR above 4% - High volatility environment")
alertcondition(smoothedNATR < 1, 
    title="Low Volatility", message="Normalized ATR below 1% - Low volatility environment")
alertcondition(ta.crossover(smoothedNATR, natrMA), 
    title="Volatility Trend Up", message="Normalized ATR crossed above its MA - Volatility trend rising")
alertcondition(ta.crossunder(smoothedNATR, natrMA), 
    title="Volatility Trend Down", message="Normalized ATR crossed below its MA - Volatility trend falling")
alertcondition(percentileRank > 90, 
    title="90th Percentile", message="Volatility in 90th percentile - Extremely high relative to history")
alertcondition(percentileRank < 10, 
    title="10th Percentile", message="Volatility in 10th percentile - Extremely low relative to history")
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Edgerunner Trading System

//@version=6
indicator("Edgerunner Momentum Composite [Timeframe Adaptive]", shorttitle="ER-MC", overlay=false)

// Timeframe Adaptation Settings
timeframeMultiplier = input.float(1.0, "Timeframe Multiplier", minval=0.1, maxval=10, step=0.1, tooltip="Adjust for different timeframes: 0.033 for 5min, 0.2 for 1H, 1.0 for Daily, 5 for Weekly")

// Base periods (optimized for daily - mean reversion)
baseRSIPeriod = 10
baseBBPeriod = 20
baseStochPeriod = 20
baseCCIPeriod = 20
baseNormROCPeriod = 20

// Adjusted periods based on timeframe
rsiPeriod = math.round(baseRSIPeriod * timeframeMultiplier)
bbPeriod = math.round(baseBBPeriod * timeframeMultiplier)
stochPeriod = math.round(baseStochPeriod * timeframeMultiplier)
cciPeriod = math.round(baseCCIPeriod * timeframeMultiplier)
normROCPeriod = math.round(baseNormROCPeriod * timeframeMultiplier)

// 1. RSI Settings
rsiOverbought = input.float(70, "RSI Overbought", minval=50, maxval=100, group="RSI")
rsiOversold = input.float(30, "RSI Oversold", minval=0, maxval=50, group="RSI")

// 2. %B (Bollinger Bands) Settings
bbStdDev = input.float(2.0, "BB StdDev", minval=0.5, maxval=3, step=0.5, group="Bollinger Bands")
bbOverbought = input.float(1.0, "%B Overbought", minval=0.5, maxval=1.5, group="Bollinger Bands")
bbOversold = input.float(0.0, "%B Oversold", minval=-0.5, maxval=0.5, group="Bollinger Bands")

// 3. StochClose Settings
stochSmoothing = input.int(1, "StochClose Smoothing", minval=1, group="StochClose")
stochOverbought = input.float(95, "StochClose Overbought", minval=80, maxval=100, group="StochClose")
stochOversold = input.float(5, "StochClose Oversold", minval=0, maxval=20, group="StochClose")

// 4. CCI Close Settings
cciOverbought = input.float(200, "CCI Close Overbought", minval=100, maxval=300, group="CCI Close")
cciOversold = input.float(-200, "CCI Close Oversold", minval=-300, maxval=-100, group="CCI Close")

// 5. Normalized ROC Settings
normROCOverbought = input.float(3.0, "Norm ROC Overbought (%)", minval=1, maxval=5, group="Normalized ROC")
normROCOversold = input.float(-3.0, "Norm ROC Oversold (%)", minval=-5, maxval=-1, group="Normalized ROC")

// Calculate indicators
// 1. RSI
rsiValue = ta.rsi(close, rsiPeriod)
rsiSignal = rsiValue > rsiOverbought ? 1 : rsiValue < rsiOversold ? -1 : 0

// 2. %B (Bollinger Bands)
bbBasis = ta.sma(close, bbPeriod)
bbDev = bbStdDev * ta.stdev(close, bbPeriod)
bbUpper = bbBasis + bbDev
bbLower = bbBasis - bbDev
percentB = (close - bbLower) / (bbUpper - bbLower)
percentBSignal = percentB > bbOverbought ? 1 : percentB < bbOversold ? -1 : 0

// 3. StochClose
stochCloseLowest = ta.lowest(close, stochPeriod)
stochCloseHighest = ta.highest(close, stochPeriod)
stochCloseRaw = stochCloseHighest != stochCloseLowest ? 
    (close - stochCloseLowest) / (stochCloseHighest - stochCloseLowest) * 100 : 50
stochClose = ta.sma(stochCloseRaw, stochSmoothing)
stochSignal = stochClose > stochOverbought ? 1 : stochClose < stochOversold ? -1 : 0

// 4. CCI Close
cciCloseTypicalPrice = close
cciCloseMean = ta.sma(cciCloseTypicalPrice, cciPeriod)
cciCloseMeanDev = ta.sma(math.abs(cciCloseTypicalPrice - cciCloseMean), cciPeriod)
cciClose = cciCloseMeanDev != 0 ? (cciCloseTypicalPrice - cciCloseMean) / (0.015 * cciCloseMeanDev) : 0
cciSignal = cciClose > cciOverbought ? 1 : cciClose < cciOversold ? -1 : 0

// 5. Normalized ROC
roc = (close - close[normROCPeriod]) / close[normROCPeriod] * 100
atr = ta.atr(normROCPeriod)
normalizedROC = atr != 0 ? math.abs(roc) / (atr / close * 100) * (roc > 0 ? 1 : -1) : 0
normROCSignal = normalizedROC > normROCOverbought ? 1 : normalizedROC < normROCOversold ? -1 : 0

// Calculate Momentum Composite
momentumComposite = rsiSignal + percentBSignal + stochSignal + cciSignal + normROCSignal

// Plotting
compositeColor = momentumComposite > 2 ? color.red : 
                 momentumComposite < -2 ? color.green : 
                 momentumComposite > 0 ? color.new(color.red, 50) :
                 momentumComposite < 0 ? color.new(color.green, 50) : color.gray

plot(momentumComposite, title="Momentum Composite", color=compositeColor, style=plot.style_columns, linewidth=2)

// Reference lines
hline(5, "Max Overbought", color=color.red, linestyle=hline.style_dotted)
hline(3, "Strong Overbought", color=color.new(color.red, 50), linestyle=hline.style_dotted)
hline(1, "Weak Overbought", color=color.new(color.red, 70), linestyle=hline.style_dotted)
hline(0, "Neutral", color=color.gray)
hline(-1, "Weak Oversold", color=color.new(color.green, 70), linestyle=hline.style_dotted)
hline(-3, "Strong Oversold", color=color.new(color.green, 50), linestyle=hline.style_dotted)
hline(-5, "Max Oversold", color=color.green, linestyle=hline.style_dotted)

// Background coloring
bgcolor(momentumComposite >= 3 ? color.new(color.red, 95) : na, title="Overbought Background")
bgcolor(momentumComposite <= -3 ? color.new(color.green, 95) : na, title="Oversold Background")

// Component breakdown table
var table componentTable = table.new(position.top_right, 6, 3, bgcolor=color.new(color.black, 90))
if barstate.islast
    // Headers
    table.cell(componentTable, 0, 0, "Indicator", text_color=color.white)
    table.cell(componentTable, 1, 0, "RSI", text_color=color.white)
    table.cell(componentTable, 2, 0, "%B", text_color=color.white)
    table.cell(componentTable, 3, 0, "Stoch", text_color=color.white)
    table.cell(componentTable, 4, 0, "CCI", text_color=color.white)
    table.cell(componentTable, 5, 0, "nROC", text_color=color.white)
    
    // Values
    table.cell(componentTable, 0, 1, "Value", text_color=color.white)
    table.cell(componentTable, 1, 1, str.tostring(rsiValue, "#.#"), 
        text_color=rsiSignal == 1 ? color.red : rsiSignal == -1 ? color.green : color.gray)
    table.cell(componentTable, 2, 1, str.tostring(percentB, "#.##"), 
        text_color=percentBSignal == 1 ? color.red : percentBSignal == -1 ? color.green : color.gray)
    table.cell(componentTable, 3, 1, str.tostring(stochClose, "#.#"), 
        text_color=stochSignal == 1 ? color.red : stochSignal == -1 ? color.green : color.gray)
    table.cell(componentTable, 4, 1, str.tostring(cciClose, "#"), 
        text_color=cciSignal == 1 ? color.red : cciSignal == -1 ? color.green : color.gray)
    table.cell(componentTable, 5, 1, str.tostring(normalizedROC, "#.#"), 
        text_color=normROCSignal == 1 ? color.red : normROCSignal == -1 ? color.green : color.gray)
    
    // Signals
    table.cell(componentTable, 0, 2, "Signal", text_color=color.white)
    table.cell(componentTable, 1, 2, str.tostring(rsiSignal), 
        text_color=rsiSignal == 1 ? color.red : rsiSignal == -1 ? color.green : color.gray)
    table.cell(componentTable, 2, 2, str.tostring(percentBSignal), 
        text_color=percentBSignal == 1 ? color.red : percentBSignal == -1 ? color.green : color.gray)
    table.cell(componentTable, 3, 2, str.tostring(stochSignal), 
        text_color=stochSignal == 1 ? color.red : stochSignal == -1 ? color.green : color.gray)
    table.cell(componentTable, 4, 2, str.tostring(cciSignal), 
        text_color=cciSignal == 1 ? color.red : cciSignal == -1 ? color.green : color.gray)
    table.cell(componentTable, 5, 2, str.tostring(normROCSignal), 
        text_color=normROCSignal == 1 ? color.red : normROCSignal == -1 ? color.green : color.gray)

// Alerts
alertcondition(momentumComposite <= -3, 
    title="Strong Oversold", message="Momentum Composite at -3 or lower - Strong oversold condition")
alertcondition(momentumComposite >= 3, 
    title="Strong Overbought", message="Momentum Composite at +3 or higher - Strong overbought condition")
alertcondition(ta.crossover(momentumComposite, -3), 
    title="Exit Oversold", message="Momentum Composite crossed above -3 - Potential bounce")
alertcondition(ta.crossunder(momentumComposite, 3), 
    title="Exit Overbought", message="Momentum Composite crossed below +3 - Potential pullback")
alertcondition(momentumComposite == -5, 
    title="Extreme Oversold", message="All 5 indicators oversold - Extreme oversold condition")
alertcondition(momentumComposite == 5, 
    title="Extreme Overbought", message="All 5 indicators overbought - Extreme overbought condition")